import PropTypes from 'prop-types';

export const configType = PropTypes.shape({
  amplify: PropTypes.shape({
    Auth: PropTypes.shape({
      identityPoolId: PropTypes.string,
      region: PropTypes.oneOf(['us-east-1']),
      userPoolId: PropTypes.string,
      userPoolWebClientId: PropTypes.string,
    }),
    Storage: PropTypes.shape({
      bucket: PropTypes.string,
      region: PropTypes.oneOf(['us-east-1']),
    }),
  }),
  apollo: PropTypes.shape({
    auth: PropTypes.shape({
      type: PropTypes.oneOf(['AWS_IAM']),
    }),
    region: PropTypes.oneOf(['us-east-1']),
    url: PropTypes.string,
  }),
});

export const themeType = PropTypes.shape({
  baseFontSizeBeforeBreakpoint: PropTypes.shape({
    lg: PropTypes.string.isRequired,
    md: PropTypes.string.isRequired,
    sm: PropTypes.string.isRequired,
    xl: PropTypes.string.isRequired,
    xs: PropTypes.string.isRequired,
  }),
  boxShadows: PropTypes.shape({
    md: PropTypes.string.isRequired,
  }),
  breakpoints: PropTypes.shape({
    lg: PropTypes.string.isRequired,
    md: PropTypes.string.isRequired,
    sm: PropTypes.string.isRequired,
    xl: PropTypes.string.isRequired,
    xs: PropTypes.string.isRequired,
  }),
  colors: PropTypes.shape({
    accent: PropTypes.string,
    accentBg: PropTypes.string,
    accentDark: PropTypes.string,
    accentLight: PropTypes.string,
    black: PropTypes.string,
    body: PropTypes.string,
    border: PropTypes.string,
    buttonPrimaryActive: PropTypes.string,
    buttonPrimaryBg: PropTypes.string,
    buttonPrimaryHover: PropTypes.string,
    buttonPrimaryText: PropTypes.string,
    buttonSecondaryActive: PropTypes.string,
    buttonSecondaryBg: PropTypes.string,
    buttonSecondaryHover: PropTypes.string,
    buttonSecondaryText: PropTypes.string,
    error: PropTypes.string,
    gray1: PropTypes.string,
    gray2: PropTypes.string,
    gray3: PropTypes.string,
    gray4: PropTypes.string,
    gray5: PropTypes.string,
    gray6: PropTypes.string,
    inputPrimaryBg: PropTypes.string,
    inputPrimaryBorder: PropTypes.string,
    inputPrimaryBorderError: PropTypes.string,
    inputPrimaryBorderFocus: PropTypes.string,
    inputPrimaryPlaceholderText: PropTypes.string,
    inputSecondaryBg: PropTypes.string,
    inputSecondaryBorder: PropTypes.string,
    inputSecondaryBorderError: PropTypes.string,
    inputSecondaryBorderFocus: PropTypes.string,
    inputSecondaryPlaceholderText: PropTypes.string,
    primary: PropTypes.string,
    primaryBg: PropTypes.string,
    primaryDark: PropTypes.string,
    primaryLight: PropTypes.string,
    success: PropTypes.string,
    textHeading: PropTypes.string,
    textLink: PropTypes.string,
    textPrimary: PropTypes.string,
    textSubtle: PropTypes.string,
    warning: PropTypes.string,
    white: PropTypes.string,
  }),
  fonts: PropTypes.shape({
    mono: PropTypes.string.isRequired,
    primary: PropTypes.string.isRequired,
    secondary: PropTypes.string.isRequired,
  }),
  fontSizes: PropTypes.shape({
    lg: PropTypes.string.isRequired,
    md: PropTypes.string.isRequired,
    sm: PropTypes.string.isRequired,
    xl: PropTypes.string.isRequired,
    xs: PropTypes.string.isRequired,
    xxl: PropTypes.string.isRequired,
    xxs: PropTypes.string.isRequired,
  }),
  fontWeights: PropTypes.shape({
    bold: PropTypes.number.isRequired,
    light: PropTypes.number.isRequired,
    normal: PropTypes.number.isRequired,
  }),
  letterSpacings: PropTypes.shape({
    lg: PropTypes.string.isRequired,
    md: PropTypes.string.isRequired,
    sm: PropTypes.string.isRequired,
  }),
  lineHeights: PropTypes.shape({
    lg: PropTypes.string.isRequired,
    md: PropTypes.string.isRequired,
    sm: PropTypes.string.isRequired,
  }),
  radii: PropTypes.shape({
    lg: PropTypes.string.isRequired,
    md: PropTypes.string.isRequired,
    sm: PropTypes.string.isRequired,
  }),
  space: PropTypes.shape({
    lg: PropTypes.string.isRequired,
    md: PropTypes.string.isRequired,
    sm: PropTypes.string.isRequired,
    xl: PropTypes.string.isRequired,
    xs: PropTypes.string.isRequired,
    xxl: PropTypes.string.isRequired,
    xxs: PropTypes.string.isRequired,
    xxxl: PropTypes.string.isRequired,
    xxxs: PropTypes.string.isRequired,
  }),
  transitionSpeeds: PropTypes.shape({
    fast: PropTypes.string.isRequired,
    normal: PropTypes.string.isRequired,
    slow: PropTypes.string.isRequired,
  }).isRequired,
});
